// для раскодирования нужно импортировать модуль
const jwt = require('jsonwebtoken')

// мидлваре для декодирования токена и проверки его на валидность
// если токен не валидный будем сразу возвращать ошибку
module.exports = function (req, res, next) {
    // делаем проверку если метод равен options то пропускаем
    if (req.method === "OPTIONS") {
        next()
    }
    // нас интересует get, post, put, delete
    try {
        // теперь нам нужно выцепить сам токен из запроса, как правило его помещают в
        // header, с начала идёт тип токена а потом сам токен
        // для этого мы пишем пробел '_' что бы их отлепить друг от друга
        const token = req.headers.authorization.split(' ')[1] // Bearer
        // делаем проверку, если токена нету возвращаем ошибку
        if (!token) {
            return res.status(401).json({ message: "Пользователь не авторизован" })
        }
        // если токен есть то нам необходимо его расскодировать
        // для проверки токена на валидность нужно использовать verify
        // в параметры мы передаём полученый токен и секретный ключ
        const decoded = jwt.verify(token, process.env.SECRET_KEY)
        // далее мы прекрепляем этот decoded к user что бы он использовать его в своих запросах
        req.user = decoded
        next()

    } catch (e) { // если где то возникла ошбика возращаем 401(статус когда не авторизован)
        res.status(401).json({ message: "Пользователь не авторизован" })
    }
};